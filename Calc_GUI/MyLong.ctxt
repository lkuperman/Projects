#BlueJ class context
comment0.target=MyLong
comment1.params=
comment1.target=MyLong()
comment10.params=d
comment10.target=boolean\ isBigger(MyLong)
comment10.text=\n\ isBigger\ is\ used\ to\ aid\ subtract\ in\ determining\ the\ number\ with\ the\ largest\ absolute\ value\n
comment11.params=
comment11.target=int\ getLength()
comment12.params=b
comment12.target=boolean\ isEqual(MyLong)
comment12.text=\n\ aids\ subtract\ method\ in\ determining\ if\ the\ numbers\ are\ equal\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\n\ Turns\ a\ myLong\ into\ a\ string\ and\ if\ it\ is\ negative\ adds\ a\ negative\ symbol\n
comment14.params=
comment14.target=void\ getLong()
comment14.text=\n\ prints\ contents\ of\ a\ myLong\ variable\n
comment15.params=diff
comment15.target=java.lang.String\ makeStr(int)
comment15.text=\n\ turns\ the\ array\ of\ numbers\ into\ a\ string\ of\ numbers\ and\ adds\ appropriate\ zeroes\n\ to\ match\ the\ length\ of\ another\ myLong\ array\n
comment16.params=num
comment16.target=java.lang.String\ ridZeroes(java.lang.String)
comment16.text=\n\ gets\ rid\ of\ zeroes\ preceding\ a\ number\n
comment17.params=diff
comment17.target=java.util.ArrayList\ makeArr(int)
comment17.text=\n\ prints\ contents\ of\ a\ myLong\ variable\n
comment18.params=input
comment18.target=java.util.ArrayList\ copyArr(java.util.ArrayList)
comment18.text=\n\ copies\ one\ array\ into\ a\ different\ one\n
comment19.params=diff\ x
comment19.target=java.util.ArrayList\ addZeroes(int,\ java.util.ArrayList)
comment19.text=\n\ Prepends\ an\ existing\ array\ with\ zeroes\ to\ allow\ subtraction\ to\ work\ with\ large\ numbers\n
comment2.params=num
comment2.target=MyLong(java.lang.String)
comment20.params=val
comment20.target=void\ setNeg(boolean)
comment21.params=
comment21.target=boolean\ getNeg()
comment3.params=newNum
comment3.target=void\ setLong(java.lang.String)
comment3.text=\n\ sets\ MyLong\ using\ the\ string\ newNum,\ which\ is\ called\ in\ the\ constructor.\n
comment4.params=other
comment4.target=MyLong\ add(MyLong)
comment4.text=\n\n\ Helper\ method\ to\ return\ MyLong\ in\ the\ add\ method\ as\ desired\n
comment5.params=other
comment5.target=MyLong\ multiply(MyLong)
comment5.text=\n\n\ Helper\ method\ to\ return\ MyLong\ in\ the\ multiply\ method\ as\ desired\n
comment6.params=other
comment6.target=MyLong\ subtract(MyLong)
comment6.text=\n\n\ Helper\ method\ to\ return\ MyLong\ in\ the\ subtract\ method\ as\ desired\n
comment7.params=other
comment7.target=java.lang.String\ addStr(MyLong)
comment7.text=\n\ Adds\ two\ myLong\ objects\ together\ and\ returns\ a\ string\n
comment8.params=other
comment8.target=java.lang.String\ multiplyStr(MyLong)
comment8.text=\n\ Multiply\ takes\ one\ MyLong\ parameter\ and\ multiplies\ every\ component\ of\ that\ to\ the\ object\n\ being\ referenced.\ An\ object\ containing\ the\ result\ of\ the\ multiplication\ is\ returned\n\n\ @param\ is\ the\ MyLong\ that\ you\ want\ multiplied\ by\ the\ MyLong\ being\ referenced\n\ @return\ a\ MyLong\ object\ representing\ the\ result\ of\ the\ multiplication\n
comment9.params=b
comment9.target=java.lang.String\ subtractStr(MyLong)
comment9.text=\n\ subtract\ takes\ one\ MyLong\ parameter\ and\ subtracts\ every\ component\ of\ that\ to\ the\ object\n\ being\ referenced.\ A\ string\ is\ returned\n\n\ @param\ is\ the\ long\ that\ you\ want\ subtracted\ to\ the\ long\ you\ are\ referencing\n\ @return\ a\ string\ that\ can\ be\ turned\ into\ a\ long\ object\ if\ needed\n
numComments=22
