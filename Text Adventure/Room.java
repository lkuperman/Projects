/** * Class Room - a room in an adventure game. * * Author:  Leah Kuperman *  * Retrieves information about each room including the exits, the doctors, and items found in each room *  */class Room {    private String description;    private Room north, south, east, west;    private String items="";    private String doctors = "";    /**     * Create a room described "description". Initially, it has no exits.     * "description" is something like "a kitchen" or "an open court yard".     */    public Room(String description)     {        this.description = description;    }    /**     * The second constructor retrieves a description of the room along with the items found in the room     *      */     public Room(String description, String items)     {        this.description = description;        this.items = items;    }    /**     * The third constructor gathers the description, the items, and the doctors in each room     */    public Room(String description, String items, String doctors)     {        this.description = description;        this.items = items;        this.doctors = doctors;    }    /**     * Sets up doctors from game class     */    public void setDoctors(String str)    {        doctors = str;    }    /**     * Returns which doctors are in a given room     */    public String getDoctors()    {        return doctors;    }    /**     * Define the exits of this room.  Every direction either leads to     * another room or is null (no exit there).     */    public void setExits(Room theNorth, Room theEast, Room theSouth, Room theWest)     {        this.north = theNorth;        this.east = theEast;        this.south = theSouth;        this.west = theWest;    }    /**     * Sets the items to the ones that were initialized in the game class.     */    public void setItems(String str)    {        items = str;    }    /**     * Returns the items in a given room     */    public String getItems()    {        return items;    }    /**     * Return the description of the room (the one that was defined in the     * constructor).     */    public String shortDescription()    {        return description;    }    /**     * If the room has no items, it will return a long description of this room, on the form:     *     You are in the kitchen.     *     Exits: north west     *          * If the room has items, it will return a long description of the room along with the items such as:     *     You are in the kitchen.     *     Exits: north west     *     Items: rag, fork, knife.     */    public String longDescription()    {        if (items.equals(""))        {            return "You are " + description + ".\n" + exitString() + ".\n";        }        else        {            return "You are " + description + ".\n" + exitString() + ".\nYou can see: " + items + ".\n";        }    }    /**     * Return a string describing the room's exits, for example     * "Exits: north west ".     */    private String exitString()    {        String returnString = "Exits:";        if (north != null)            returnString += " north";        if (east != null)            returnString += " east";        if (south != null)            returnString += " south";        if (west != null)            returnString += " west";        return returnString;    }    /**     * this room in direction     * "direction". If there is no room in that direction, return null.     */    public Room nextRoom(String direction)     {        if (direction.equals("north"))            return north;        else if (direction.equals("east"))            return east;        else if (direction.equals("south"))            return south;        else if (direction.equals("west"))            return west;        else            return null;    }}